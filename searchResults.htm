<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Search Results - Careers Designer</title>
    <style>
        /* Previous CSS remains the same */
        body {
            margin: 0;
            font-family: Arial, sans-serif;
        }

        .search-results-container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            background-color: white;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .job-card {
            border: 1px solid #ddd;
            margin-bottom: 15px;
            padding: 15px;
            border-radius: 5px;
        }

        .job-title {
            color: #333;
            margin-bottom: 10px;
        }

        .job-details {
            color: #666;
        }

        .job-apply {
            display: inline-block;
            background-color: #4CAF50;
            color: white;
            padding: 8px 15px;
            text-decoration: none;
            border-radius: 4px;
            margin-top: 10px;
        }

        .search-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .back-button {
            background-color: #007bff;
            color: white;
            text-decoration: none;
            padding: 8px 15px;
            border-radius: 4px;
        }

        /* Navigation Bar */
        .navbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background-color: #004080;
            padding: 0.5rem 1rem;
            color: white;
        }
        .navbar .logo {
            font-size: 1.5rem;
            font-weight: bold;
        }
        .navbar ul {
            display: flex;
            list-style: none;
            margin: 0;
            padding: 0;
        }
        .navbar ul li {
            margin: 0 0.5rem;
        }
        .navbar ul li a {
            text-decoration: none;
            color: white;
            font-size: 1rem;
            padding: 0.5rem 0.8rem;
        }
        .navbar ul li a:hover {
            background-color: #0066cc;
            border-radius: 5px;
        }
        .navbar .auth-buttons {
            display: flex;
            gap: 0.5rem;
        }
        .navbar .auth-buttons a {
            text-decoration: none;
            color: #004080;
            background-color: white;
            padding: 0.5rem 1rem;
            border-radius: 5px;
            font-size: 1rem;
        }
        .navbar .auth-buttons a:hover {
            background-color: #e6e6e6;
        }
        @media (max-width: 768px) {
            .navbar ul {
                display: none;
            }
        }
    </style>
</head>

<body>
    <!-- Navigation Bar -->
  <nav class="navbar">
    <div class="logo">Careers Designer</div>
    <ul>
      <li><a href="index.htm">Search Jobs</a></li>
      <li><a href="latestJobs.htm">Latest Jobs</a></li>
      <li><a href="aboutUs.htm">About Us</a></li>
    </ul>
    <div class="auth-buttons">
      <a href="#login">Login</a>
      <a href="#signup">Sign Up</a>
    </div>
  </nav>

    <div class="search-results-container">
        <div class="search-header">
            <h1>Search Results</h1>
            <a href="index.htm" class="back-button">Back to Search</a>
        </div>

        <div id="job-results">
            <!-- Job results will be dynamically populated here -->
        </div>
    </div>

    <script>
        // function getQueryParam(name) {
        //     const urlParams = new URLSearchParams(window.location.search);
        //     const value = urlParams.get(name);
        //     return value ? value.trim() : '';
        // }

        // async function displayJobResults() {
        //     try {
        //         const response = await fetch('jobs.json');
        //         const jobData = await response.json();

        //         const query = getQueryParam('query');
        //         const location = getQueryParam('location');


        //         const filteredJobs = jobData.filter(job =>
        //             (query === '' ||
        //                 job.job_title.toLowerCase().includes(query.toLowerCase()) ||
        //                 job.key_skills.toLowerCase().includes(query.toLowerCase()) ||
        //                 job.company_name.toLowerCase().includes(query.toLowerCase())) &&
        //             (location === '' ||
        //                 job.location.toLowerCase().includes(location.toLowerCase()))
        //         );

        //         const resultsContainer = document.getElementById('job-results');
        //         resultsContainer.innerHTML = filteredJobs.map(job => `
        //     <div class="job-card">
        //         <h2 class="job-title">${job.job_title.trim()}</h2>
        //         <div class="job-details">
        //             <p><strong>Company:</strong> ${job.company_name}</p>
        //             <p><strong>Location:</strong> ${job.location}</p>
        //             <p><strong>Salary:</strong> ${job.job_salary}</p>
        //             <p><strong>Experience:</strong> ${job.job_experience_required}</p>
        //             <p><strong>Key Skills:</strong> ${job.key_skills}</p>
        //         </div>
        //         <a href="#" class="job-apply">Apply Now</a>
        //     </div>
        // `).join('');

        //         document.querySelector('.search-header h1').textContent =
        //             `${filteredJobs.length} Job Results for "${query}" in ${location}`;

        //     } catch (error) {
        //         console.error('Error loading job data:', error);
        //         document.getElementById('job-results').innerHTML =
        //             '<p>Error loading job listings. Please try again later.</p>';
        //     }
        // }

        // document.addEventListener('DOMContentLoaded', displayJobResults);


        function getQueryParam(name) {
            const urlParams = new URLSearchParams(window.location.search);
            const value = urlParams.get(name);
            return value ? value.trim() : '';
        }

        // Function to calculate match percentage
        function calculateMatchPercentage(inputSkills, jobSkills) {
            // Convert both input skills and job skills to lowercase arrays
            const inputSkillsArray = inputSkills.toLowerCase().split(',').map(skill => skill.trim());
            const jobSkillsArray = jobSkills ?
                jobSkills.toLowerCase().split('|').map(skill => skill.trim()) :
                [];

            // Find matching skills
            const matchingSkills = inputSkillsArray.filter(inputSkill =>
                jobSkillsArray.some(jobSkill => inputSkill === jobSkill)
            );

            // Calculate match percentage
            return jobSkillsArray.length > 0
                ? (matchingSkills.length / jobSkillsArray.length) * 100
                : 0;
        }

        async function displayJobResults() {
            try {
                const response = await fetch('jobs.json');
                const jobData = await response.json();

                const query = getQueryParam('query');
                const location = getQueryParam('location');

                // Filter and match jobs
                const matchedJobs = jobData
                    .map(job => {
                        // Calculate match percentage for skills
                        const matchPercentage = calculateMatchPercentage(query, job.key_skills);

                        return {
                            ...job,
                            match_percentage: matchPercentage.toFixed(2)
                        };
                    })
                    .filter(job =>
                        // Filter by skills, location, and minimum match percentage
                        (query === '' || job.match_percentage > 0) &&
                        (location === '' ||
                            job.location.toLowerCase().includes(location.toLowerCase()))
                    )
                    // Sort by match percentage in descending order
                    .sort((a, b) => b.match_percentage - a.match_percentage);

                const resultsContainer = document.getElementById('job-results');

                if (matchedJobs.length === 0) {
                    document.querySelector('.search-header h1').textContent = 'No Job Results';
                    return;
                }

                resultsContainer.innerHTML = matchedJobs.map(job => `
            <div class="job-card">
                <h2 class="job-title">${job.job_title.trim()}</h2>
                <div class="job-details">
                    <p><strong>Company:</strong> ${job.company_name}</p>
                    <p><strong>Location:</strong> ${job.location}</p>
                    <p><strong>Salary:</strong> ${job.job_salary}</p>
                    <p><strong>Experience:</strong> ${job.job_experience_required}</p>
                    <p><strong>Key Skills:</strong> ${job.key_skills}</p>
                    <p><strong>Match Percentage:</strong> ${job.match_percentage}%</p>
                </div>
                <a href="#" class="job-apply">Apply Now</a>
            </div>
        `).join('');

                // Update search results header
                document.querySelector('.search-header h1').textContent =
                    `${matchedJobs.length} Job Results for "${query}" in ${location}`;

            } catch (error) {
                console.error('Error loading job data:', error);
                document.getElementById('job-results').innerHTML =
                    '<p>Error loading job listings. Please try again later.</p>';
            }
        }

        document.addEventListener('DOMContentLoaded', displayJobResults);
    </script>
</body>

</html>